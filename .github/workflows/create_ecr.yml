name: Dynamic ECR Repository Creation


on:
  push:
    paths:
      - 'jobs/**'


jobs:
  detect-changes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      # with:
      #   fetch-depth: 0

    - name: Fetch all changes in the push
      run: |
        # Fetching all changes including the latest push
        git fetch origin ${GITHUB_REF} --depth=1

        # List files changed in the last push using GitHub's native git capabilities
        # This uses the built-in GITHUB environment variables to get the range of commits pushed
        CHANGED_FILES=$(git diff --name-only HEAD ${GITHUB_SHA}^1)
        echo "Files changed in this push:"
        echo "${CHANGED_FILES}"

        # Extract directories from changed files, focusing on 'jobs/' subdirectories
        CHANGED_DIRS=$(echo "${CHANGED_FILES}" | grep '^jobs/' | sed 's|/[^/]*$||' | sort -u)
        echo "Changed directories in 'jobs/':"
        echo "${CHANGED_DIRS}"

        # Output the changed directories for use in other steps or debugging
        echo "::set-output name=changed_dirs::$CHANGED_DIRS"
        
      
# # Find all unique directories under 'jobs/' that have changed
# CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^jobs/' | sed 's|/[^/]*$||' | uniq)
# echo "Changed directories:"
# echo "$CHANGED_DIRS"
        
# jobs:
#   setup-matrix:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#     - uses: actions/checkout@v3

#     - id: set-matrix
#       name: Set matrix for changed folders
#       run: |
#         # Detect all folders under 'jobs/' that have changed. This can include changes to any files within these folders.
#         FOLDERS=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^jobs/' | cut -d'/' -f1-2 | uniq)
#         echo $FOLDERS
#         if [ -z "$FOLDERS" ]; then
#           echo "No folders found, setting dummy value."
#           FOLDERS="jobs/dummy"
#         fi
#         MATRIX_JSON=$(echo $FOLDERS | jq -R -s -c 'split("\n")[:-1] | map({folder: .})')
#         echo "MATRIX_JSON=$MATRIX_JSON"
#         echo "::set-output name=matrix::{\"include\":$MATRIX_JSON}"

#   create-repositories:
#       needs: setup-matrix
#       runs-on: ubuntu-latest
#       strategy:
#         matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}
#       steps:
#       - uses: actions/checkout@v3


#       - name: Print job name
#         run: |
#           CONFIG_FILE="${{ matrix.folder }}/.config"
#           if [ -f "$CONFIG_FILE" ]; then
#             JOB_NAME=$(grep 'JOB_NAME' $CONFIG_FILE | cut -d '=' -f2 | tr -d '[:space:]')
#             echo $JOB_NAME
#           else
#             echo "Skipping, no config found for ${{ matrix.folder }}"
#           fi

    #   - name: Setup AWS CLI
    #     uses: aws-actions/configure-aws-credentials@v1
    #     with:
    #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #         aws-region: us-east-1

    #   - name: Install JQ
    #     run: sudo apt-get install jq -y

    #   - name: Create or Update ECR repository
    #     run: |
    #       CONFIG_FILE="${{ matrix.folder }}/.config"
    #       if [ -f "$CONFIG_FILE" ]; then
    #         JOB_NAME=$(grep 'JOB_NAME' $CONFIG_FILE | cut -d '=' -f2 | tr -d '[:space:]')
    #         aws ecr describe-repositories --repository-names $JOB_NAME 2>/dev/null || aws ecr create-repository --repository-name $JOB_NAME
    #       else
    #         echo "Skipping, no config found for ${{ matrix.folder }}"
    #       fi